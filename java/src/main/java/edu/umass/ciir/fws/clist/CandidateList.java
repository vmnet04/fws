/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.umass.ciir.fws.clist;

import edu.umass.ciir.fws.utility.TextProcessing;

/**
 * A more richer representation for a candidate list than
 * edu.umass.ciir.fws.types.CandidateList generated by Tupleflow-type-builder.
 *
 * @author wkong
 */
public class CandidateList extends edu.umass.ciir.fws.types.CandidateList {

    public String[] items; // candidate list items
    public final static int MAX_TERM_SIZE = 10; // maxium number of word in an candidate item/a facet term

    public CandidateList() {
        
    }
    
    public CandidateList(String qid, long docRank, String listType, String[] items) {
        this.qid = qid;
        this.docRank = docRank;
        this.listType = listType;
        this.items = items;
        this.itemList = TextProcessing.join(items, "|");
    }

    CandidateList(String qid, long docRank, String listType, String itemList, String[] items) {
        this.qid = qid;
        this.docRank = docRank;
        this.listType = listType;
        this.itemList = itemList;
        this.items = items;
    }

    public boolean valid() {
        if (items.length > 1) {
            return true;
        } else {
            return false;
        }
    }

    /**
     * if the candidate list is html type (extracted based on html patterns).
     *
     * @return
     */
    public boolean isHtmlType() {
        return !isTextType();
    }

    public boolean isTextType() {
        return listType.equals(CandidateListTextExtractor.type);
    }
    
    @Override
    public String toString() {
        return String.format("%s\t%s\t%s\t%s", qid, docRank, listType, itemList);
    }

}
